---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  namespace: mydata
  name: nextcloud
spec:
  chart:
    spec:
      sourceRef:
        kind: HelmRepository
        name: bjw-s
      # renovate: registryUrl=https://bjw-s.github.io/helm-charts
      chart: app-template
      version: 1.5.1
  interval: 1h
  maxHistory: 1
  values:
    controller:
      replicas: 2
      strategy: RollingUpdate
      rollingUpdate:
        unavailable: 1
    image:
      # renovate:
      repository: nextcloud
      tag: 25.0.13-apache
    serviceAccount:
      create: true
      annotations:
        eks.amazonaws.com/role-arn: arn:aws:iam::262264826613:role/amethyst-nextcloud
        eks.amazonaws.com/audience: sts.amazonaws.com
    podAnnotations:
      secret.reloader.stakater.com/reload: &s nextcloud-secret
      configmap.reloader.stakater.com/reload: &c nextcloud-config

    env:
      OVERWRITECLIURL: https://drive.timtor.dev
      OVERWRITEPROTOCOL: https
      NEXTCLOUD_TRUSTED_DOMAINS: &host drive.timtor.dev
      NEXTCLOUD_DATA_DIR: &data /data
      NEXTCLOUD_ADMIN_USER:
        valueFrom:
          secretKeyRef:
            name: *s
            key: NEXTCLOUD_ADMIN_USER
      NEXTCLOUD_ADMIN_PASSWORD:
        valueFrom:
          secretKeyRef:
            name: *s
            key: NEXTCLOUD_ADMIN_PASSWORD
      POSTGRES_HOST: nextcloud-postgres-rw
      POSTGRES_DB: nextcloud
      POSTGRES_USER:
        valueFrom:
          secretKeyRef:
            name: *s
            key: POSTGRES_USER
      POSTGRES_PASSWORD:
        valueFrom:
          secretKeyRef:
            name: *s
            key: POSTGRES_PASSWORD
      REDIS_HOST: nextcloud-dragonfly
      REDIS_HOST_PORT: 6379
      REDIS_HOST_PASSWORD:
        valueFrom:
          secretKeyRef:
            name: *s
            key: REDIS_HOST_PASSWORD

    persistence:
      secret:
        enabled: true
        type: custom
        volumeSpec:
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: *s
      apache-overwrite-port-1:
        enabled: true
        type: configMap
        name: *c
        mountPath: /etc/apache2/ports.conf
        subPath: ports.conf
        items:
          - key: ports.conf
            path: ports.conf
      apache-overwrite-port-2:
        enabled: true
        type: configMap
        name: *c
        mountPath: /etc/apache2/sites-available/000-default.conf
        subPath: 000-default.conf
        items:
          - key: 000-default.conf
            path: 000-default.conf
      apache-extra-config:
        enabled: true
        type: configMap
        name: *c
        mountPath: /etc/apache2/conf-enabled/extra.conf
        subPath: extra.conf
        items:
          - key: extra.conf
            path: extra.conf
      php-config:
        enabled: true
        type: configMap
        name: *c
        mountPath: /usr/local/etc/php/conf.d/php-config.ini
        subPath: php-config.ini
        items:
          - key: php-config.ini
            path: php-config.ini
      nextcloud-extra-config:
        enabled: true
        type: configMap
        name: *c
        defaultMode: 0644
        mountPath: /var/www/html/config/extra.config.php
        subPath: extra.config.php
        items:
          - key: extra.config.php
            path: extra.config.php
      install:
        enabled: true
        type: pvc
        existingClaim: nextcloud-install
        mountPath: /var/www/html
      data:
        enabled: true
        type: pvc
        existingClaim: nextcloud-data
        mountPath: *data
      music:
        enabled: true
        type: pvc
        existingClaim: navidrome-data
        mountPath: /music

    podSecurityContext:
      fsGroup: 33
    securityContext:
      runAsNonRoot: true
      runAsUser: 33
      runAsGroup: 33
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: false
      capabilities:
        drop: ["ALL"]
      seccompProfile:
        type: RuntimeDefault

    probes:
      startup:
        enabled: false
      liveness:
        enabled: false
      readiness:
        enabled: false

    service:
      main:
        enabled: true
        ports:
          http:
            enabled: true
            protocol: TCP
            port: &port 8080

    ingress:
      main:
        enabled: true
        ingressClassName: nginx
        annotations:
          nginx.ingress.kubernetes.io/proxy-body-size: "0"
        hosts:
          - host: *host
            paths:
              - path: /
                pathType: Prefix
                service:
                  port: *port
