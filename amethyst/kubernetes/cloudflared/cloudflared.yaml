---
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: HelmRepository
metadata:
  namespace: cloudflared
  name: bjw-s
spec:
  url: https://bjw-s.github.io/helm-charts
  interval: 24h
---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  namespace: cloudflared
  name: cloudflared
spec:
  chart:
    spec:
      sourceRef:
        kind: HelmRepository
        name: bjw-s
      # renovate: registryUrl=https://bjw-s.github.io/helm-charts
      chart: app-template
      version: 2.6.0
  interval: 1h
  maxHistory: 1
  values:
    controller:
      replicas: 2
      strategy: RollingUpdate
      rollingUpdate:
        unavailable: 1
    image:
      repository: cloudflare/cloudflared
      tag: 2023.8.2
    args:
      - tunnel
      - --no-autoupdate
      - --config
      - /config/tunnel.yaml
      - run

    serviceAccount:
      create: true
      annotations:
        eks.amazonaws.com/role-arn: arn:aws:iam::262264826613:role/amethyst-cloudflared
        eks.amazonaws.com/audience: sts.amazonaws.com
    podAnnotations:
      secret.reloader.stakater.com/reload: &s cloudflared-secret
      configmap.reloader.stakater.com/reload: &c cloudflared-config

    persistence:
      config:
        enabled: true
        type: configMap
        name: cloudflared-config
        mountPath: /config
      ## Get the secret with `cloudflared tunnel token <tunnel-nam> --cred-file credential.json`
      ## The tunnel token fetched on UI is generally the base64 compact version of credential.json
      secret:
        enabled: true
        type: custom
        mountPath: /secret
        volumeSpec:
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: *s

    podSecurityContext:
      fsGroup: 65532
    securityContext:
      runAsNonRoot: true
      runAsUser: 65532
      runAsGroup: 65532
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
      capabilities:
        drop: ["ALL"]
      seccompProfile:
        type: RuntimeDefault

    probes:
      liveness:
        enabled: true
        custom: true
        spec:
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3
          httpGet:
            path: /ready
            port: 2000

    service:
      main:
        enabled: true
        ports:
          http:
            enabled: true
            protocol: TCP
            port: 2000

    serviceMonitor:
      main:
        enabled: true
        endpoints:
          - port: http
            scheme: http
            path: /metrics
            interval: 1m
            metricRelabelings:
              - action: drop
                sourceLabels: [__name__]
                regex: ^(go|process).*
