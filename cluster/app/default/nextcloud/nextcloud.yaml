---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  namespace: default
  name: nextcloud
spec:
  chart:
    spec:
      sourceRef:
        kind: HelmRepository
        namespace: flux-system
        name: nextcloud
      # renovate: registryUrl=https://nextcloud.github.io/helm/
      chart: nextcloud
      version: 2.12.1
  interval: 1h
  values:
    image:
      repository: nextcloud
      tag: 22.2.4-apache
      pullPolicy: IfNotPresent

    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: nginx
        nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8, 192.168.0.0/16"
        nginx.ingress.kubernetes.io/proxy-body-size: 50G
      path: /
      # use nextcloud.host as ingerss host

    replicaCount: 2

    affinity:
      nodeAffinity:
        # do not put the nextcloud in master nodes
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: node-role.kubernetes.io/master
                  operator: DoesNotExist
        # prefer in amd64
        preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            preference:
              matchExpressions:
                - key: kubernetes.io/arch
                  operator: In
                  values:
                    - amd64

      podAntiAffinity:
        # do not put pod to the same node
        requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                    - nextcloud
            topologyKey: kubernetes.io/hostname

    resources:
      limits:
        cpu: 1
        memory: 2Gi
      requests:
        cpu: 500m
        memory: 1Gi

    livenessProbe:
      enabled: true
      initialDelaySeconds: 300 # first install may slow in rsync

    persistence:
      enabled: true
      existingClaim: nextcloud-data

    nextcloud:
      host: nc.${ROOT_DOMAIN}
      username: ${NEXTCLOUD_USER}
      password: ${NEXTCLOUD_PASSWORD}

      defaultConfigs:
        # use apcu as local memcache, use and use custom redis cluster config below
        apcu.config.php: true
        redis.config.php: false
        smtp.config.php: false
        # database configs
        autoconfig.php: true

      # PHP config in /usr/local/etc/php/conf.d for apache image
      # use redis cluster as session handler
      # config document - https://github.com/phpredis/phpredis/blob/develop/cluster.markdown#session-handler
      phpConfigs:
        upload.ini: |-
          upload_max_filesize=10G
          post_max_size=10G
          memory_limit=4G
        redis-cluster.ini: |-
          session.save_handler = rediscluster
          session.save_path = "seed[]=${NEXTCLOUD_REDIS_ENDPOINT}&timeout=2&read_timeout=2&failover=error&persistent=1&auth[user]=${NEXTCLOUD_REDIS_USER}&auth[pass]=${NEXTCLOUD_REDIS_PASSWORD}"
          redis.session.locking_enabled=1
          redis.session.lock_retries=-1
          redis.session.lock_wait_time=10000 ;in microsecond

      configs:
        https.config.php: |-
          <?php
          $CONFIG = [
            'overwriteprotocol' => 'https'
          ];

        # use redis cluster as nextcloud distributed memcache
        # config document - https://github.com/nextcloud/server/blob/master/tests/redis-cluster.config.php
        redis-cluster.config.php: |-
          <?php 
          $CONFIG = [
            'memcache.distributed' => '\\OC\\Memcache\\Redis',
            'memcache.locking' => '\\OC\\Memcache\\Redis',
            'redis.cluster' => [
              'seeds' => [
                '${NEXTCLOUD_REDIS_ENDPOINT}',
              ],
              'timeout' => 0.0,
              'read_timeout' => 0.0,
              'failover_mode' => \RedisCluster::FAILOVER_ERROR,
              'user' => '${NEXTCLOUD_REDIS_USER}',
              'password' => '${NEXTCLOUD_REDIS_PASSWORD}'
            ],
          ];

      extraVolumes:
        - name: jellyfin-media
          persistentVolumeClaim:
            claimName: jellyfin-media
            
      extraVolumeMounts:
        - name: jellyfin-media
          mountPath: /jellyfin-media

    internalDatabase:
      enabled: false

    #- Postgres setting
    # environments will be used in autoconfig.php
    externalDatabase:
      enabled: true
      type: postgresql
      host: ${NEXTCLOUD_KUBEGRES_ENDPOINT}
      user: ${NEXTCLOUD_KUBEGRES_USER}
      password: ${NEXTCLOUD_KUBEGRES_PASSWORD}
      database: nextcloud

    metrics:
      enabled: true
      https: true