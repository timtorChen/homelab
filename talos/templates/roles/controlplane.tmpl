{{ define "controlplane" }}
{{ $secret := merge 
  ( ds "aws-homelab" "/amethyst/talos-machine" | data.JSON ) 
  ( ds "aws-homelab" "/amethyst/talos-cluster" | data.JSON )
}}
version: v1alpha1
debug: false
persist: true
machine:
  # -- Setup
  type: controlplane
  token: {{ $secret.machine_token }}
  # Talos CA
  ca:
    crt: {{ $secret.machine_ca_crt }}
    key: {{ $secret.machine_ca_key }}
  certSANs: []
  install:
    wipe: false
    extraKernelArgs:
      - talos.logging.kernel=tcp://192.168.253.100:3001
      # disable predictable interface naming
      - net.ifnames=0
  network: {}
  logging:
    destinations:
      - endpoint: tcp://192.168.253.100:3002
        format: json_lines
  # -- Services
  kubelet:
    defaultRuntimeSeccompProfileEnabled: true
    disableManifestsDirectory: true
  # -- Talos features
  features:
    rbac: true
    kubernetesTalosAPIAccess:
      enabled: true
      allowedRoles:
        - os:etcd:backup
        - os:admin
      allowedKubernetesNamespaces:
        - etcd-backup
        - talos-upgrade
    stableHostname: true
    apidCheckExtKeyUsage: true
    kubePrism:
      enabled: true
      port: 7445
cluster:
  # -- Setup
  clusterName: amethyst
  controlPlane:
    endpoint: https://192.168.253.10:6443
  network:
    cni:
      name: none
    dnsDomain: cluster.local
    podSubnets:
      - 10.244.0.0/16
    serviceSubnets:
      - 10.96.0.0/12
  # Cluster id
  id: {{ $secret.cluster_id }}
  # Cluster shared secret
  secret: {{ $secret.cluster_secret }}
  # Boostrap token used to join the cluster
  token: {{ $secret.cluster_token }}
  # Etcd encryption at rest
  secretboxEncryptionSecret: {{ $secret.cluster_secretboxEncryptionSecret }}
  # Kubernetes CA
  ca:
    crt: {{ $secret.cluster_ca_crt }}
    key: {{ $secret.cluster_ca_key }}
  # Aggregator CA for generating fortned-proxy certificate
  aggregatorCA:
    crt: {{ $secret.cluster_aggregatorCA_crt }}
    key: {{ $secret.cluster_aggregatorCA_key }}
  # Private key for generating serviceAccount token (JWT)
  # Talos generates ECDSA key by default
  # Change to RSA for AWS IAM identity provider
  serviceAccount:
    key: {{ $secret.cluster_serviceAccount_key }}
  # -- Services
  proxy:
    disabled: true
  apiServer:
    image: ""
    extraArgs:
      oidc-issuer-url: https://oauth.id.jumpcloud.com/
      oidc-client-id: {{ $secret.cluster_apiServer_extraArgs_oidc_client_id }}
      oidc-username-claim: email
      oidc-groups-claim: groups
      service-account-issuer: https://amethyst-kubernetes-oidc.s3.us-west-2.amazonaws.com
      service-account-jwks-uri: https://192.168.253.10:6443/openid/v1/jwks
    # Certificae SANs for API server CA signing certificate
    certSANs:
      - 192.168.253.10
    disablePodSecurityPolicy: true
    admissionControl:
      - name: PodSecurity
        configuration:
          apiVersion: pod-security.admission.config.k8s.io/v1
          kind: PodSecurityConfiguration
          defaults:
            enforce: restricted
            enforce-version: latest
            audit: restricted
            audit-version: latest
            warn: restricted
            warn-version: latest
          exemptions:
            namespaces:
              - kube-system
            runtimeClasses: []
            usernames: []
    auditPolicy:
      apiVersion: audit.k8s.io/v1
      kind: Policy
      rules:
        - level: Metadata
  etcd:
    image: ""
    # Etcd CA
    ca:
      crt: {{ $secret.cluster_etcd_ca_crt }}
      key: {{ $secret.cluster_etcd_ca_key }}
    extraArgs:
      listen-metrics-urls: http://0.0.0.0:2381
  controllerManager:
    image: ""
    extraArgs:
      bind-address: 0.0.0.0
  scheduler:
    image: ""
    extraArgs:
      bind-address: 0.0.0.0
  coreDNS:
    image: ""
  # -- Extras
  extraManifests: []
  inlineManifests: []
  discovery:
    enabled: false
{{ end }}