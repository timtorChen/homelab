---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/refs/heads/main/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  namespace: unifi-controller
  name: unifi-controller
spec:
  chart:
    spec:
      sourceRef:
        kind: HelmRepository
        name: bjw-s
      chart: app-template
      version: 3.6.1
  interval: 1h
  maxHistory: 1
  timeout: 1m0s
  values:
    controllers:
      main:
        # Notice: stateful application in deployment
        type: deployment
        replicas: 1
        strategy: Recreate
        pod:
          automountServiceAccountToken: false
          securityContext:
            fsGroup: 999
        containers:
          main:
            image:
              repository: jacobalberty/unifi
              tag: v9.0
            probes:
              startup:
                enabled: true
              readiness:
                enabled: true
              liveness:
                enabled: true
            resources:
              limits:
                memory: 1Gi
              requests:
                cpu: 50m
                memory: 1Gi
            securityContext:
              runAsNonRoot: true
              runAsUser: 999
              runAsGroup: 999
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop: ["ALL"]
              seccompProfile:
                type: RuntimeDefault

    persistence:
      data:
        type: persistentVolumeClaim
        existingClaim: unifi-controller-data
        globalMounts:
          - path: /unifi
            subPath: data
      tmp:
        type: emptyDir
        globalMounts:
          - path: /tmp

    service:
      main:
        controller: main
        primary: true
        ports:
          http:
            primary: true
            port: &web 8443
            protocol: HTTP
          inform:
            port: &inform 8080
            protocol: TCP

    ingress:
      main:
        className: nginx
        annotations:
          nginx.ingress.kubernetes.io/backend-protocol: HTTPS
        hosts:
          - host: ui.timtor.dev
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: main
                  port: *web
      inform:
        className: nginx
        annotations:
          nginx.ingress.kubernetes.io/ssl-redirect: "false"
        hosts:
          - host: ui.timtor.dev
            paths:
              - path: /inform
                pathType: Prefix
                service:
                  identifier: main
                  port: *inform
