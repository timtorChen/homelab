---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/refs/heads/main/source.toolkit.fluxcd.io/helmrepository_v1.json
apiVersion: source.toolkit.fluxcd.io/v1
kind: HelmRepository
metadata:
  namespace: vector
  name: bjw-s
spec:
  url: https://bjw-s.github.io/helm-charts
  interval: 24h
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/refs/heads/main/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  namespace: vector
  name: vector
spec:
  chart:
    spec:
      sourceRef:
        kind: HelmRepository
        name: bjw-s
      chart: app-template
      version: 3.6.1
  interval: 1h
  maxHistory: 1
  timeout: 1m0s
  values:
    controllers:
      main:
        type: deployment
        replicas: 2
        strategy: RollingUpdate
        annotations:
          configmap.reloader.stakater.com/reload: &config vector-config
        containers:
          main:
            image:
              repository: timberio/vector
              tag: 0.33.0-distroless-libc
            env:
              VECTOR_CONFIG_DIR: &config-dir /config
            resources:
              limits:
                memory: 64Mi
              requests:
                cpu: 50m
                memory: 64Mi
            probes:
              startup:
                enabled: false
              liveness:
                enabled: false
              readiness:
                enabled: false
            securityContext:
              runAsNonRoot: true
              runAsUser: 65534
              runAsGroup: 65534
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop: ["ALL"]
              seccompProfile:
                type: RuntimeDefault

    persistence:
      config:
        type: configMap
        name: *config
        globalMounts:
          - path: *config-dir

    service:
      main:
        controller: main
        primary: true
        ports:
          talos-kernel:
            protocol: TCP
            port: 3001
          talos-service:
            protocol: TCP
            port: 3002
          mikrotik:
            protocol: UDP
            port: 4001
          unifi:
            protocol: UDP
            port: 5001
