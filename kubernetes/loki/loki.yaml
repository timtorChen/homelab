---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/refs/heads/main/source.toolkit.fluxcd.io/helmrepository_v1.json
apiVersion: source.toolkit.fluxcd.io/v1
kind: HelmRepository
metadata:
  namespace: loki
  name: grafana
spec:
  url: https://grafana.github.io/helm-charts
  interval: 24h
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/refs/heads/main/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  namespace: loki
  name: loki
spec:
  chart:
    spec:
      sourceRef:
        kind: HelmRepository
        name: grafana
      chart: loki
      version: 5.48.0
  interval: 1h
  maxHistory: 1
  values:
    serviceAccount:
      create: true
      annotations:
        eks.amazonaws.com/role-arn: arn:aws:iam::262264826613:role/amethyst-loki
        eks.amazonaws.com/audience: sts.amazonaws.com

    loki:
      config: ""
      structuredConfig:
        auth_enabled: false
        analytics:
          reporting_enabled: false
        common:
          path_prefix: /var/loki
          replication_factor: 3
        server:
          http_listen_port: 3100
          grpc_listen_port: 9095
        memberlist:
          join_members:
            - loki-memberlist
        storage_config:
          aws:
            endpoint: rook-ceph-rgw-fast.rook-ceph.svc:8080
            bucketnames: amethyst-loki
            access_key_id: ${APP_S3_ACCESS_KEY_ID}
            secret_access_key: ${APP_S3_SECRET_ACCESS_KEY}
            insecure: true
            s3forcepathstyle: true
        schema_config:
          configs:
            - from: "2023-08-23"
              store: boltdb-shipper
              object_store: aws
              schema: v11
              index:
                prefix: loki_index_
                period: 24h
        limits_config:
          # keep logs for 90 days
          retention_period: 90d
          max_query_series: 5000
        compactor:
          retention_enabled: true
          # every 10 minutes delete the old index
          # and mark old chunks as deleted at once
          compaction_interval: 10m
          delete_request_cancel_period: 0s
          # wait for 2 hours to actually delete the chunks
          retention_delete_delay: 2h

      podSecurityContext:
        fsGroup: 10001

      containerSecurityContext:
        runAsNonRoot: true
        runAsGroup: 10001
        runAsUser: 10001
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        capabilities:
          drop: ["ALL"]
        seccompProfile:
          type: RuntimeDefault

    write:
      replicas: 3
      podAnnotations: &annotations
        secret.reloader.stakater.com/reload: &s loki-secret
      extraArgs: &args
        - -config.expand-env=true
      extraEnvFrom: &envFrom
        - secretRef:
            name: loki-secret
      extraVolumes: &volumes
        - name: *s
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: *s
      extraVolumeMounts: &mounts
        - name: *s
          mountPath: /loki-secret
          readOnly: true
      ## -- EOL
      persistence:
        size: 10Gi
        storageClass: rbd-fast-delete
        enableStatefulSetAutoDeletePVC: false
      resources: {}
    read:
      replicas: 3
      podAnnotations: *annotations
      extraArgs: *args
      extraEnvFrom: *envFrom
      extraVolumes: *volumes
      extraVolumeMounts: *mounts
      resources: {}
    backend:
      replicas: 3
      podAnnotations: *annotations
      extraArgs: *args
      extraEnvFrom: *envFrom
      extraVolumes: *volumes
      extraVolumeMounts: *mounts
      persistence:
        size: 10Gi
        storageClass: rbd-fast-delete
        enableStatefulSetAutoDeletePVC: false
      resources: {}

    ingress:
      enabled: true
      ingressClassName: nginx
      annotations:
        nginx.ingress.kubernetes.io/client-body-buffer-size: 100k
      hosts:
        - loki.timtor.dev
      paths:
        write:
          - /api/prom/push
          - /loki/api/v1/push
        read:
          - /api/prom/tail
          - /loki/api/v1/tail
          - /loki/api
          - /api/prom/rules
          - /loki/api/v1/rules
          - /prometheus/api/v1/rules
          - /prometheus/api/v1/alerts

    monitoring:
      serviceMonitor:
        enabled: true
        interval: 1m
        metricRelabelings:
          - action: drop
            sourceLabels: [__name__]
            regex: ^(go|process).*
      dashboards:
        enabled: false
      rules:
        enabled: false
      alerts:
        enabled: false
      selfMonitoring:
        enabled: false
        grafanaAgent:
          installOperator: false
      lokiCanary:
        enabled: false

    sidecar:
      rules:
        enabled: false
        securityContext: {}
    crds:
      enabled: false
    test:
      enabled: false
    minio:
      enabled: false
    gateway:
      enabled: false
    tokengen:
      enabled: false
