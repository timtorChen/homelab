---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/refs/heads/main/postgresql.cnpg.io/cluster_v1.json
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  namespace: mydata
  name: immich-postgres
spec:
  imageName: ghcr.io/cloudnative-pg/postgresql:15.6
  instances: 2
  storage:
    pvcTemplate:
      storageClassName: fs-fast
      resources:
        requests:
          storage: 5Gi
      accessModes: ["ReadWriteOnce"]
  bootstrap:
    initdb:
      database: immich
      owner: immich
      secret:
        name: immich-postgres-secret
  backup:
    retentionPolicy: "1w"
    barmanObjectStore:
      endpointURL: https://s3.us-east-005.backblazeb2.com
      destinationPath: s3://homelab-amethyst-immich
      s3Credentials:
        accessKeyId:
          name: immich-postgres-secret
          key: POSTGRES_B2_ACCESS_KEY_ID
        secretAccessKey:
          name: immich-postgres-secret
          key: POSTGRES_B2_ACCESS_SECRET_KEY
      wal:
        compression: gzip
        maxParallel: 8
---
apiVersion: postgresql.cnpg.io/v1
kind: ScheduledBackup
metadata:
  namespace: mydata
  name: immich-postgres-backup
spec:
  schedule: "0 0 0/12 * *"
  backupOwnerReference: self
  cluster:
    name: immich-postgres
  target: prefer-standby
---
## workaround to hold secret
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: mydata
  name: immich-postgres-secret-holder
  annotations:
    eks.amazonaws.com/audience: sts.amazonaws.com
    eks.amazonaws.com/role-arn: arn:aws:iam::262264826613:role/amethyst-immich-postgres-secret-holder
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/yannh/kubernetes-json-schema/refs/heads/master/master/deployment-v1.json
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: mydata
  name: &n immich-postgres-secret-holder
spec:
  replicas: 1
  selector:
    matchLabels:
      app: *n
  template:
    metadata:
      labels:
        app: *n
    spec:
      serviceAccount: *n
      volumes:
        - name: &s immich-postgres-secret
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: *s
      containers:
        - name: *n
          image: busybox:latest
          command: ["sleep", "infinity"]
          volumeMounts:
            - name: *s
              mountPath: /immich-postgres-secret
              readOnly: true
          securityContext:
            runAsNonRoot: true
            runAsUser: 65534
            runAsGroup: 65534
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop: ["ALL"]
            seccompProfile:
              type: RuntimeDefault
          resources: {}
