---
# yaml-language-server: $schema=https://raw.githubusercontent.com/go-task/task/refs/heads/main/website/static/schema.json
version: "3"
silent: true

includes:
  aws:
    taskfile: ../../../.tasks/aws.yaml
  restic:
    taskfile: ../../../.tasks/restic.yaml
  volsync:
    taskfile: ../../../.tasks/volsync.yaml
  cnpg:
    taskfile: ../../../.tasks/cnpg.yaml

tasks:
  secrets:
    internal: true
    silent: true
    env:
      RESTIC_REPO_INSTALL: &repo-install s3://s3.us-east-005.backblazeb2.com/homelab-amethyst-nextcloud/install
      RESTIC_REPO_DATA: &repo-data s3://s3.us-east-005.backblazeb2.com/homelab-amethyst-nextcloud/data
      REPO_DB: &repo-db s3://homelab-amethyst-nextcloud/nextcloud-postgres/base/
      PASSWORD: &restic-password
        sh: |
          AWS_PROFILE=sso-admin@aws-homelab
          aws ssm get-parameter --with-decryption \
          --name /amethyst/nextcloud-backup \
          | jq -r '.Parameter.Value | fromjson | .RESTIC_PASSWORD'

  shell:
    cmd: kubectl exec -it -n mydata deployment/nextcloud -- bash

  backup:
    deps:
      - task: volsync:backup
        vars:
          TEMPLATE: maintain/data-manual-backup.tmpl.yaml
          NAMESPACE: mydata
          NAME: nextcloud-data-backup
          WAIT: false
      - task: volsync:backup
        vars:
          TEMPLATE: maintain/install-manual-backup.tmpl.yaml
          NAMESPACE: mydata
          NAME: nextcloud-install-backup
          WAIT: false
      - task: cnpg:backup
        vars:
          NAMESPACE: mydata
          NAME: nextcloud-postgres
          WAIT: false

  restore:
    prompt: |
      Restore will delete current nextcloud data and database... continue?
    cmds:
      - task: stop
      - task: delete-volume
      - task: cnpg:delete
        vars:
          NAMESPACE: mydata
          NAME: nextcloud-postgres
      - task: create-volume
      - task: cnpg:pitr
        vars:
          TEMPLATE: maintain/postgres-restore.tmpl.yaml
          WAIT: false
      - task: volsync:restore
        vars:
          TEMPLATE: maintain/install-manual-restore.tmpl.yaml
          NAMESPACE: mydata
          NAME: nextcloud-install-restore
          WAIT: false
      - task: volsync:restore
        vars:
          TEMPLATE: maintain/data-manual-restore.tmpl.yaml
          NAMESPACE: mydata
          NAME: nextcloud-data-restore
          WAIT: false

  delete-volume:
    internal: true
    cmd: |
      echo "Deleting nextcloud volume claim..."
      kubectl delete -f app/data-pvc.yaml
      kubectl delete -f app/install-pvc.yaml

  create-volume:
    internal: true
    cmd: |
      echo "Creating nextcloud volume claim..."
      kubectl create -f app/data-pvc.yaml
      kubectl create -f app/install-pvc.yaml

  stop:
    cmd: |
      echo "Stopping nextcloud..."
      kubectl scale --replicas 0 -n mydata deployment/nextcloud

  start:
    cmd: |
      echo "Starting nextcloud..."
      kubectl scale --replicas 2 -n mydata deployment/nextcloud

  stop-postgres:
    cmds:
      - task: cnpg:stop
        vars:
          NAMESPACE: mydata
          NAME: nextcloud-postgres

  start-postgres:
    cmds:
      - task: cnpg:start
        vars:
          NAMESPACE: mydata
          NAME: nextcloud-postgres

  stop-all:
    cmds:
      - task: stop
      - task: stop-postgres

  start-all:
    cmds:
      - task: start-postgres
      - task: start

  list-backup:
    cmds:
      - echo "Listing nextcloud-install snapshots..."
      - task: restic:list
        vars:
          REPO: *repo-install
          PASSWORD: *restic-password
      - echo "Listing nextcloud-data snapshots..."
      - task: restic:list
        vars:
          REPO: *repo-data
          PASSWORD: *restic-password
      - echo "Listing nextcloud-postgres backups..."
      - task: aws:s3-ls
        vars:
          REPO: *repo-db

  unlock-repo:
    cmds:
      - echo "Unlocking nextcloud-install repository..."
      - task: restic:unlock
        vars:
          REPO: *repo-install
          PASSWORD: *restic-password
      - echo "Unlocking nextcloud-data repository..."
      - task: restic:unlock
        vars:
          REPO: *repo-data
          PASSWORD: *restic-password
