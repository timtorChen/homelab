---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"
silent: true

includes:
  volsync:
    taskfile: ../../../.tasks/volsync.yaml

tasks:
  backup:
    deps:
      - task: volsync:backup
        vars:
          TEMPLATE: maintain/db-manual-backup.tmpl.yaml
          NAMESPACE: mydata
          NAME: navidrome-db-backup
      - task: volsync:backup
        vars:
          TEMPLATE: maintain/data-manual-backup.tmpl.yaml
          NAMESPACE: mydata
          NAME: navidrome-data-backup
          TIMEOUT: 10m

  restore:
    prompt: |
      Navidrome volume is shared with nextcloud, remember to stop the nextcloud before proceeding.
      Restore will delete the current navidrome data... continune?
    cmds:
      - task: stop
      - task: delete-volume
      - task: create-volume
      - task: volsync:restore
        vars:
          TEMPLATE: maintain/db-manual-restore.tmpl.yaml
          NAMESPACE: mydata
          NAME: navidrome-db-restore
      - task: volsync:restore
        vars:
          TEMPLATE: maintain/data-manual-restore.tmpl.yaml
          NAMESPACE: mydata
          NAME: navidrome-data-restore
          TIMEOUT: 20m
      - task: start

  delete-volume:
    internal: true
    ignore_error: true
    cmd: |
      echo "Deleting vaultwarden volume claim..."
      kubectl delete -f app/db-pvc.yaml
      kubectl delete -f app/data-pvc.yaml

  create-volume:
    internal: true
    cmd: |
      echo "Creating vaultwarden volume claim..."
      kubectl create -f app/db-pvc.yaml
      kubectl create -f app/data-pvc.yaml

  stop:
    cmd: |
      echo "Stopping navidrome..."
      kubectl scale --replicas 0 -n mydata deployment/navidrome

  start:
    cmd: |
      echo "Starting navidrome..."
      kubectl scale --replicas 1 -n mydata deployment/navidrome

  list-backup:
    env:
      SSM_PARAMETER_NAME: /kubernetes/navidrome/backup
      BACKUP_SECRET:
        sh: |
          aws ssm get-parameter \
          --name "$SSM_PARAMETER_NAME" \
          --query "Parameter.Value" --with-decryption
      OPENDAL_ENDPOINT: "https://s3.us-east-005.backblazeb2.com"
      OPENDAL_BUCKET:
        sh: echo $BACKUP_SECRET | jq -r 'fromjson | .OPENDAL_BUCKET'
      OPENDAL_ACCESS_KEY_ID:
        sh: echo $BACKUP_SECRET | jq -r 'fromjson | .OPENDAL_ACCESS_KEY_ID'
      OPENDAL_SECRET_ACCESS_KEY:
        sh: echo $BACKUP_SECRET | jq -r 'fromjson | .OPENDAL_SECRET_ACCESS_KEY'
      RUSTIC_PASSWORD:
        sh: echo $BACKUP_SECRET | jq -r 'fromjson | .RUSTIC_PASSWORD'
    cmds:
      - |
          echo "Listing navidrome-data backups..."
          export OPENDAL_ROOT="/data"
          rustic snapshots -r "opendal:s3" --log-level=error
      - |
          echo "Listing navidrome-db backups..."
          export OPENDAL_ROOT="/db"
          rustic snapshots -r "opendal:s3" --log-level=error
