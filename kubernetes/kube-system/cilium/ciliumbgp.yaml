---
apiVersion: cilium.io/v2alpha1
kind: CiliumBGPClusterConfig
metadata:
  name: cilium-bgp
spec:
  nodeSelector:
    matchExpressions:
      - key: node-role.kubernetes.io/control-plane
        operator: DoesNotExist
  bgpInstances:
    - name: "homelab-talos-cluster"
      localASN: 65001
      peers:
        - name: "mikrotik"
          peerASN: 65000
          peerAddress: 192.168.248.1
          peerConfigRef:
            name: "cilium-peer"
---
apiVersion: cilium.io/v2alpha1
kind: CiliumBGPPeerConfig
metadata:
  name: cilium-peer
spec:
  timers:
    holdTimeSeconds: 9
    keepAliveTimeSeconds: 3
  # authSecretRef: bgp-auth-secret
  gracefulRestart:
    enabled: true
    restartTimeSeconds: 15
  families:
    - afi: ipv4
      safi: unicast
      advertisements:
        matchLabels:
          advertise: "bgp"
---
apiVersion: cilium.io/v2alpha1
kind: CiliumBGPAdvertisement
metadata:
  name: bgp-advertisements
  labels:
    advertise: bgp
spec:
  advertisements:
    - advertisementType: "Service"
      service:
        addresses:
          - LoadBalancerIP
      selector:
        matchLabels:
          gateway.networking.k8s.io/gateway-name: test-gw
---
# apiVersion: "cilium.io/v2alpha1"
# kind: CiliumLoadBalancerIPPool
# metadata:
#   name: "test-pool"
# spec:
#   blocks:
#     - start: "192.168.20.200"
#       stop: "192.168.20.250"
#   serviceSelector:
#     matchLabels:
#       io.cilium.gateway/owning-gateway: test-gw
#       gateway.networking.k8s.io/gateway-name: test-gw
# ---
#!  manaully install gateway api crds
# ---
apiVersion: gateway.networking.k8s.io/v1
kind: GatewayClass
metadata:
  name: cilium
spec:
  controllerName: io.cilium/gateway-controller
  description: The default Cilium GatewayClass
---
apiVersion: gateway.networking.k8s.io/v1
kind: Gateway
metadata:
  namespace: kube-system
  name: test-gw
spec:
  gatewayClassName: cilium
  listeners:
    - name: shared-http
      protocol: HTTP
      port: 8080
      allowedRoutes:
        namespaces:
          from: All
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: ingress-nginx
  namespace: ingress-nginx
spec:
  parentRefs:
    - namespace: kube-system
      name: test-gw
  rules:
    - matches:
        - path:
            type: PathPrefix
            value: /
      backendRefs:
        - kind: Service
          name: ingress-nginx-controller
          port: 80
