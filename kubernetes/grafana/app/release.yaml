---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/refs/heads/main/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  namespace: grafana
  name: grafana
spec:
  chart:
    spec:
      sourceRef:
        kind: HelmRepository
        namespace: grafana
        name: grafana
      chart: grafana
      version: 9.0.0
  interval: 1h
  maxHistory: 1
  values:
    image:
      registry: docker.io
      repository: grafana/grafana
      tag: 12.0.1
    replicas: 2
    serviceAccount:
      create: true
      annotations:
        eks.amazonaws.com/role-arn: arn:aws:iam::262264826613:role/amethyst-grafana
        eks.amazonaws.com/audience: sts.amazonaws.com
    podAnnotations:
      secret.reloader.stakater.com/reload: &s grafana-secret
    envFromSecrets:
      - name: *s
    extraSecretMounts:
      - name: *s
        mountPath: /grafana-secret
        readOnly: true
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: *s

    ## admin username and password cannot be declaratively change after creation
    admin:
      existingSecret: *s
      userKey: ADMIN_USER
      passwordKey: ADMIN_PASSWORD

    grafana.ini:
      log:
        ## Debug, change to level: debug
        level: info
      auth:
        ## Debug, uncomment to enable the default admin user while OIDC failed
        disable_login_form: true
      server:
        root_url: https://grafana.timtor.dev
      live:
        allowed_origins: https://grafana.timtor.dev
      analytics:
        check_for_updates: false
        reporting_enabled: false
      database:
        type: postgres
        name: grafana
        url: ${POSTGRES_URL}
      auth.anonymous:
        enabled: true
        org_name: Public
        org_role: Viewer
        hide_version: true
      auth.generic_oauth:
        enabled: true
        allow_sign_up: true
        auto_login: false
        name: JumpCloud
        client_id: ${JUMPCLOUD_OIDC_CLIENT_ID}
        client_secret: ${JUMPCLOUD_OIDC_CLIENT_SECRET}
        auth_url: https://oauth.id.jumpcloud.com/oauth2/auth
        token_url: https://oauth.id.jumpcloud.com/oauth2/token
        api_url: https://oauth.id.jumpcloud.com/userinfo
        scopes: email profile
        ## Roles
        allow_assign_grafana_admin: true
        role_attribute_path: >
          groups == 'Admin' && 'GrafanaAdmin' ||
          contains(groups[*], 'Admin') && 'GrafanaAdmin' ||
          'no-sorry-not-you'
        role_attribute_strict: true
        skip_org_role_sync: true
      unified_alerting:
        enabled: true
        ha_listen_address: ${POD_IP}:9094
        ha_peers: grafana-alerting:9094
        ha_advertise_address: ${POD_IP}:9094
        ha_peer_timeout: 15s

    plugins:
      - grafana-synthetic-monitoring-app
    datasources:
      datasources.yaml:
        apiVersion: 1
        datasources:
          - &mimir
            orgId: 1
            name: mimir-amethyst
            access: proxy
            type: prometheus
            url: http://mimir-query-frontend.mimir:8080/prometheus
            jsonData:
              timeInterval: 1m
            isDefault: false
            editable: true
          - &loki
            orgId: 1
            name: loki-amethyst
            access: proxy
            type: loki
            url: http://loki-read.loki:3100
            isDefault: false
            editable: true
          - <<: *mimir
            orgId: 3
          - <<: *loki
            orgId: 3

    resources:
      limits:
        memory: 256Mi
      requests:
        cpu: 50m
        memory: 256Mi

    ingress:
      enabled: true
      ingressClassName: nginx
      hosts:
        - grafana.timtor.dev
---
apiVersion: v1
kind: Service
metadata:
  namespace: grafana
  name: grafana-alerting
  labels:
    app.kubernetes.io/part-of: grafana
    app.kubernetes.io/name: grafana-alerting
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: gossip-tcp
      protocol: TCP
      port: 9094
      targetPort: 9094
    - name: gossip-udp
      protocol: UDP
      port: 9094
      targetPort: 9094
  selector:
    app.kubernetes.io/name: grafana
