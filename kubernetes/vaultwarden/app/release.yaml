---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/refs/heads/main/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  namespace: vaultwarden
  name: vaultwarden
spec:
  chart:
    spec:
      sourceRef:
        kind: HelmRepository
        name: bjw-s
      chart: app-template
      version: 3.6.1
  interval: 1h
  maxHistory: 1
  timeout: 1m0s
  values:
    controllers:
      main:
        # Notice: stateful application in deployment
        type: deployment
        replicas: 1
        strategy: Recreate
        annotations:
          secret.reloader.stakater.com/reload: &s vaultwarden-secret
        pod:
          automountServiceAccountToken: false
          securityContext:
            fsGroup: 65534
          dnsConfig:
            options:
              - name: ndots
                value: "1"
        containers:
          main:
            image:
              repository: ghcr.io/dani-garcia/vaultwarden
              tag: 1.32.7-alpine
            ## Debug only, uncomment
            # command: ["sleep", "infinity"]

            ## Environment variables reference
            # https://github.com/dani-garcia/vaultwarden/blob/main/.env.template
            env:
              ## Debug only, uncomment
              # LOG_LEVEL: debug
              DATA_FOLDER: &dir /data
              ROCKET_PORT: &p 8080
              SIGNUP_ALLOWED: true
              DISABLE_ADMIN_TOKEN: false
              DISABLE_ICON_DOWNLOAD: true
              DOMAIN: https://vault.timtor.dev
              ## Push notification server
              ## Generate the token on https://bitwarden.com/host/
              PUSH_ENABLED: true
              PUSH_RELAY_URI: https://push.bitwarden.com
              PUSH_IDENTITY_URI: https://identity.bitwarden.com
              PUSH_INSTALLATION_ID:
                valueFrom:
                  secretKeyRef:
                    name: *s
                    key: PUSH_INSTALLATION_ID
              PUSH_INSTALLATION_KEY:
                valueFrom:
                  secretKeyRef:
                    name: *s
                    key: PUSH_INSTALLATION_KEY
              ## Generate the admin token hash with command
              ## `echo -n "admin-password" | argon2 "$(openssl rand -base64 32)" -e -id -k 65540 -t 3 -p 4`
              ADMIN_TOKEN:
                valueFrom:
                  secretKeyRef:
                    name: *s
                    key: ADMIN_TOKEN
            probes:
              startup:
                enabled: true
              liveness:
                enabled: true
              readiness:
                enabled: true
            resources:
              limits:
                memory: 128Mi
              requests:
                cpu: 10m
                memory: 128Mi
            securityContext:
              runAsNonRoot: true
              runAsUser: 65534
              runAsGroup: 65534
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop: ["ALL"]
              seccompProfile:
                type: RuntimeDefault

    persistence:
      data:
        type: persistentVolumeClaim
        existingClaim: vaultwarden-data
        globalMounts:
          - path: *dir
      secret:
        type: custom
        volumeSpec:
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: *s

    serviceAccount:
      create: true
      annotations:
        eks.amazonaws.com/role-arn: arn:aws:iam::262264826613:role/amethyst-vaultwarden
        eks.amazonaws.com/audience: sts.amazonaws.com

    service:
      main:
        controller: main
        primary: true
        ports:
          http:
            primary: true
            port: *p
            protocol: HTTP

    ingress:
      main:
        className: nginx
        hosts:
          - host: vault.timtor.dev
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: main
                  port: *p
              - path: /notifications/hub
                pathType: Prefix
                service:
                  identifier: main
                  port: *p
