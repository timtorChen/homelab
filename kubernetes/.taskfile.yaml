---
# yaml-language-server: $schema=https://raw.githubusercontent.com/go-task/task/refs/heads/main/website/static/schema.json
version: "3"
silent: true

includes:
  k8s:
    taskfile: ../.tasks/kubernetes.yaml
  rook-ceph:
    optional: true
    taskfile: ../.tasks/rook-ceph.yaml
  etcd-backup:
    taskfile: etcd-backup/.taskfile.yaml
  cilium:
    optional: true
    taskfile: ../.tasks/cilium.yaml
  nextcloud:
    optional: true
    taskfile: mydata/nextcloud/.taskfile.yaml
    dir: mydata/nextcloud
  navidrome:
    optional: true
    taskfile: mydata/navidrome/.taskfile.yaml
    dir: mydata/navidrome
  immich:
    optional: true
    taskfile: mydata/immich/.taskfile.yaml
    dir: mydata/immich
  vaultwarden:
    optional: true
    taskfile: vaultwarden/.taskfile.yaml
    dir: vaultwarden
  unifi-controller:
    optional: true
    taskfile: unifi-controller/.taskfile.yaml
    dir: unifi-controller
  miniflux:
    optional: true
    taskfile: miniflux/.taskfile.yaml
    dir: miniflux
  grafana:
    optional: true
    taskfile: grafana/.taskfile.yaml
    dir: grafana

tasks:
  clear-volume:
    cmds:
      - task: k8s:delete-unused-persistentvolume

  # yamllint disable rule:line-length
  init:
    cmds:
      - echo "Install Cilium on kube-system/cilium (helm)"
      - |
          helm upgrade --install cilium cilium/cilium \
          --namespace kube-system \
          --version 1.14.0-snapshot.4 \
          --set ipam.mode=kubernetes \
          --set kubeProxyReplacement=strict \
          --set securityContext.capabilities.ciliumAgent="{CHOWN,KILL,NET_ADMIN,NET_RAW,IPC_LOCK,SYS_ADMIN,SYS_RESOURCE,DAC_OVERRIDE,FOWNER,SETGID,SETUID}" \
          --set securityContext.capabilities.cleanCiliumState="{NET_ADMIN,SYS_ADMIN,SYS_RESOURCE}" \
          --set cgroup.autoMount.enabled=false \
          --set cgroup.hostRoot=/sys/fs/cgroup \
          --set k8sServiceHost="localhost" \
          --set k8sServicePort="7745"

      - echo "Install Flux on flux-system namespace (manifests)"
      # flux install creates a flux-system namespace
      - flux install --version v2.0.0-rc.5
      - kubectl apply -f ./kubernetes/flux-system/boostrap.yaml
  # yamllint enable

  get-oidc-config:
    silent: true
    env:
      CONFIG: &oidc-config
        sh: |
          kubectl get --raw /.well-known/openid-configuration |\
          jq '.jwks_uri= .issuer + "/.well-known/jwks"'
    cmds:
      - echo "$CONFIG"

  get-oidc-jwks:
    silent: true
    env:
      JWKS: &oidc-jwks
        sh: |
          kubectl get --raw /openid/v1/jwks | jq
    cmds:
      - echo "$JWKS"

  set-public-oidc:
    silent: true
    env:
      CONFIG: *oidc-config
      JWKS: *oidc-jwks
    cmds:
      - echo "Uploading openid-configuration to S3"
      - echo "$CONFIG" | aws s3 cp - s3://amethyst-kubernetes-oidc/.well-known/openid-configuration
      - echo "Uploading JWKs to S3"
      - echo "$JWKS" | aws s3 cp - s3://amethyst-kubernetes-oidc/.well-known/jwks
